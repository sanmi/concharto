<?xml version="1.0" encoding="UTF-8"?>
<!--
  ***** BEGIN LICENSE BLOCK *****
  Version: MPL 1.1
  
  The contents of this file are subject to the Mozilla Public License Version 
  1.1 (the "License"); you may not use this file except in compliance with 
  the License. You may obtain a copy of the License at 
  http://www.mozilla.org/MPL/
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the
  License.
  
  The Original Code is Concharto.
  
  The Initial Developer of the Original Code is
  Time Space Map, LLC
  Portions created by the Initial Developer are Copyright (C) 2007 - 2009
  the Initial Developer. All Rights Reserved.
  
  Contributor(s):
  Time Space Map, LLC
  
  ***** END LICENSE BLOCK *****
-->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN"
        "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>

    <!--  scheduler factory  -->
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <!-- <ref local="kmlExportTriggerStartup"/> -->
                <ref local="tagIndexTrigger"/> 
                <ref local="kmlExportTriggerNightly"/>
            </list>
        </property>
    </bean>

    <!--  "quartz triggerManager" definitions -->
    <bean id="kmlExportTriggerNightly" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <ref local="kmlExportJob"/>
        </property>
        <property name="cronExpression">
            <!-- every day at 1AM  --> 
            <value>0 0 01 * * ?</value>
        </property>
    </bean>

    <bean id="kmlExportTriggerStartup" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail">
            <ref bean="kmlExportJob"/>
        </property>
        <property name="startDelay">
            <!-- 5 seconds -->
            <value>5000</value>
        </property>
        <property name="repeatInterval">
            <value>10000</value> 
        </property>
        <property name="repeatCount">
            <value>0</value> <!-- repeat indefinitely -->
        </property>
    </bean>

    <bean id="tagIndexTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail">
            <ref bean="tagIndexJob"/>
        </property>
        <property name="startDelay">
            <value>7000</value> 
        </property>
        <property name="repeatInterval">
            <value>3600000</value> <!-- repeat every hour -->
        </property>
    </bean>

    <!--  job definitions  -->
    <!-- threaded email processing job -->
    <bean id="kmlExportJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass">
            <value>org.tsm.concharto.service.KmlExportService</value>
        </property>
        <property name="jobDataAsMap">
            <map>
                <entry key="eventDao">
                    <ref bean="eventDao"/>
                </entry>
                <entry key="eventSearchService">
                    <ref bean="eventSearchService"/>
                </entry>
                <entry key="sessionFactory">
                    <ref bean="mySessionFactory"/>
                </entry>
                <entry key="auditInterceptor">
                    <ref bean="auditInterceptor"/>
                </entry>
                <entry key="kmlFileName">
                    <value>events1.kml</value>
                </entry>
            </map>
        </property>
    </bean>

		<bean id="tagIndexJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		  <property name="targetObject" ref="tagAggregateService" />
		  <property name="targetMethod" value="refresh" />
		</bean>
</beans>
