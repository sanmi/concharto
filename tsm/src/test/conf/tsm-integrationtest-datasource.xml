<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
              
    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	  <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	  <property name="url" value="jdbc:mysql://localhost:3306/tsm_dev"/>
	  <property name="username" value="tsm_dev_user"/>
	  <property name="password" value="tsm_dev_user"/>
	</bean>
	
	<!-- Begin Hibernate Sessions -->  
	<bean id="mySessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
  	    <property name="dataSource" ref="myDataSource"/>
		<property name="hibernateProperties">
		    <props>
		        <prop key="hibernate.jdbc.batch_size">0</prop>
		        <prop key="hibernate.connection.pool_size">0</prop>
		        <prop key="current_session_context_class">thread</prop>
		        <prop key="hbm2ddl.auto">create</prop>
		        <prop key="hibernate.show_sql">true</prop>
		        <prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop> 
		    </props>
		</property>
		<property name="configLocation">
			<value>hibernate.cfg.xml</value>
		</property>
		<property name="schemaUpdate" value="true"/>
	</bean>
	
  	<!-- the transactional advice (i.e. what 'happens'; see the <aop:advisor/> bean below) --><!--
	<tx:advice id="txAdvice" transaction-manager="txManager">
	   the transactional semantics... 
	  <tx:attributes>
	     all methods starting with 'get' are read-only 
	    <tx:method name="get*" read-only="true"/>
	     other methods use the default transaction settings (see below) 
	    <tx:method name="*"/>
	  </tx:attributes>
	</tx:advice>
  
	--><!-- ensure that the above transactional advice runs for any execution
	    of an operation defined by the FooService interface --><!--
	<aop:config>
	  <aop:pointcut id="fooServiceOperation" expression="execution(* com.tech4d.tsm.lab.AddressDao.*(..))"/>
	  <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
	</aop:config>
	
	--><!-- similarly, don't forget the PlatformTransactionManager -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="myDataSource"/>
	</bean>
	
	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
</beans>
