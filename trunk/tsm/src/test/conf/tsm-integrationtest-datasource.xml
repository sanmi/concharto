<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
              
    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		  <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		  <property name="url" value="jdbc:mysql://localhost:3306/tsm_dev"/>
		  <property name="username" value="tsm_dev_user"/>
		  <property name="password" value="tsm_dev_user"/>
		</bean>
	
	<!-- Begin Hibernate Sessions -->  
	<bean id="mySessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
  	    <property name="dataSource" ref="myDataSource"/>
		<property name="hibernateProperties">
		    <props>
		        <prop key="hibernate.jdbc.batch_size">0</prop>
		        <prop key="hibernate.connection.pool_size">0</prop>
		        <prop key="hibernate.hbm2ddl.auto">verify</prop>
		        <prop key="hibernate.show_sql">false</prop>
		        <prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop> 
		    </props>
		</property>
		<property name="configLocation">
			<value>hibernate.cfg.xml</value>
		</property>
		<property name="schemaUpdate" value="true"/>
	</bean>
	

  <bean id="simpleAuditInterceptor" class="com.tech4d.tsm.lab.audit.SimpleAuditInterceptor">
  </bean>

	<!-- Begin Transaction config -->
	<!-- This transaction manager is different from the one used by the web app because we 
	attach the entityInterceptor to the OpenInViewInterceptor rather than to the transaction manager 
	but for integration testing, we don't use a web app context and don't do that sort of view stuff -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	  <property name="sessionFactory" ref="mySessionFactory"/>
		<property name="entityInterceptor" ref="auditInterceptor"/>
	</bean>

	<!-- enable the configuration of transactional behavior based on annotations 
			TODO not sure if this is working properly with the openSessionInViewInteceptor -->
	<tx:annotation-driven transaction-manager="txManager"/>
	<!-- End Transaction config -->


	 <!--  
	 			This stuff is for populating the test database with a lot of content
	 			TODO eliminate this cut/paste 
	 	-->
   <bean id="myTestDbDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	  <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	  <property name="url" value="jdbc:mysql://localhost:3306/tsm_test"/>
	  <property name="username" value="tsm_test_user"/>
	  <property name="password" value="tsm_test_user"/>
	</bean>

	<bean id="myTestDbSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
  	    <property name="dataSource" ref="myTestDbDataSource"/>
		<property name="hibernateProperties">
		    <props>
		        <prop key="hibernate.jdbc.batch_size">1000</prop>
		        <prop key="hibernate.cache.use_second_level_cache">false</prop>  <!-- Don't do this in production! for batch populate -->
		        <prop key="hibernate.connection.pool_size">0</prop>
		        <prop key="hibernate.hbm2ddl.auto">verify</prop>
		        <prop key="hibernate.show_sql">false</prop>
		        <prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop> 
		    </props>
		</property>
		<property name="configLocation">
			<value>hibernate.cfg.xml</value>
		</property>
		<property name="schemaUpdate" value="true"/>
	</bean>
	
  	<!-- similarly, don't forget the PlatformTransactionManager -->
	<bean id="testDbTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="myTestDbDataSource"/>
	</bean>

</beans>
